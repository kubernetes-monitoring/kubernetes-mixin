rule_files:
- ../prometheus_alerts.yaml

tests:
- interval: 1m
  name: CPUThrottlingHigh fires when CPU throttling exceeds threshold
  input_series:
  - series: 'container_cpu_cfs_throttled_periods_total{cluster="cluster1", namespace="default", pod="test-pod", container="test-container", instance="node1", job="cadvisor"}'
    values: '0+30x20'
  - series: 'container_cpu_cfs_periods_total{cluster="cluster1", namespace="default", pod="test-pod", container="test-container", instance="node1", job="cadvisor"}'
    values: '0+100x20'
  # Ensure the alert rule can still be evaluated with duplicate series.
  - series: 'container_cpu_cfs_periods_total{cluster="cluster1", namespace="default", pod="test-pod", container="test-container", instance="node1", job="cadvisor", node_kubernetes_io_exclude_from_external_load_balancers="karpenter"}'
    values: '0+100x20'
  alert_rule_test:
  - eval_time: 14m
    alertname: CPUThrottlingHigh
  - eval_time: 20m
    alertname: CPUThrottlingHigh
    exp_alerts:
    - exp_labels:
        severity: "info"
        cluster: "cluster1"
        namespace: "default"
        pod: "test-pod"
        container: "test-container"
        instance: "node1"
      exp_annotations:
        description: "30% throttling of CPU in namespace default for container test-container in pod test-pod."
        summary: "Processes experience elevated CPU throttling."
        runbook_url: "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-cputhrottlinghigh"

- interval: 1m
  name: KubeQuotaAlmostFull fires when quota usage is above 90%
  input_series:
  - series: 'kube_resourcequota{cluster="cluster1", namespace="test-ns", resource="requests.cpu", type="used", job="kube-state-metrics"}'
    values: '95 95 95 95 95 95 95 95 95 95 95 95 95 95 95 95 95 95 95 95'
  - series: 'kube_resourcequota{cluster="cluster1", namespace="test-ns", resource="requests.cpu", type="hard", job="kube-state-metrics"}'
    values: '100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100'
  alert_rule_test:
  - eval_time: 14m
    alertname: KubeQuotaAlmostFull
  - eval_time: 20m
    alertname: KubeQuotaAlmostFull
    exp_alerts:
    - exp_labels:
        severity: "info"
        cluster: "cluster1"
        namespace: "test-ns"
        resource: "requests.cpu"
      exp_annotations:
        description: "Namespace test-ns is using 95% of its requests.cpu quota."
        summary: "Namespace quota is going to be full."
        runbook_url: "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotaalmostfull"

- interval: 1m
  name: KubeQuotaFullyUsed fires when quota is 100% used
  input_series:
  - series: 'kube_resourcequota{cluster="cluster1", namespace="test-ns", resource="requests.memory", type="used", job="kube-state-metrics"}'
    values: '100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100'
  - series: 'kube_resourcequota{cluster="cluster1", namespace="test-ns", resource="requests.memory", type="hard", job="kube-state-metrics"}'
    values: '100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100'
  alert_rule_test:
  - eval_time: 14m
    alertname: KubeQuotaFullyUsed
  - eval_time: 20m
    alertname: KubeQuotaFullyUsed
    exp_alerts:
    - exp_labels:
        severity: "info"
        cluster: "cluster1"
        namespace: "test-ns"
        resource: "requests.memory"
      exp_annotations:
        description: "Namespace test-ns is using 100% of its requests.memory quota."
        summary: "Namespace quota is fully used."
        runbook_url: "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotafullyused"

- interval: 1m
  name: KubeQuotaExceeded fires when quota usage exceeds 100%
  input_series:
  - series: 'kube_resourcequota{cluster="cluster1", namespace="test-ns", resource="pods", type="used", job="kube-state-metrics"}'
    values: '120 120 120 120 120 120 120 120 120 120 120 120 120 120 120 120 120 120 120 120'
  - series: 'kube_resourcequota{cluster="cluster1", namespace="test-ns", resource="pods", type="hard", job="kube-state-metrics"}'
    values: '100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100'
  alert_rule_test:
  - eval_time: 14m
    alertname: KubeQuotaExceeded
  - eval_time: 20m
    alertname: KubeQuotaExceeded
    exp_alerts:
    - exp_labels:
        severity: "warning"
        cluster: "cluster1"
        namespace: "test-ns"
        resource: "pods"
      exp_annotations:
        description: "Namespace test-ns is using 120% of its pods quota."
        summary: "Namespace quota has exceeded the limits."
        runbook_url: "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotaexceeded"
